package com.revature.util;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class ConnectionUtil {
	public static Connection getConnection() throws SQLException {
		
	}
}

/*DROP TABLE USER;
CREATE TABLE CUSTOMER
(
    CUSTOMERID INT NOT NULL,
    USERNAME VARCHAR(40) NOT NULL,
    PASSWORD VARCHAR(40) NOT NULL,
    CONSTRAINT PK_CUSTOMER_ID PRIMARY KEY  (CUSTOMERID)
);
*/
/*
DROP TABLE CUSTOMER_ACCOUNTS;
CREATE TABLE CUSTOMER_ACCOUNTS
(
    CID INT NOT NULL,
    AID INT NOT NULL,
    CONSTRAINT PK_CID_AID PRIMARY KEY  (CID,AID),
    CONSTRAINT FK_CID FOREIGN KEY (CID) REFERENCES CUSTOMER (CUSTOMERID) ON DELETE CASCADE,
    CONSTRAINT FK_AID FOREIGN KEY (AID) REFERENCES ACCOUNT (ACCOUNTID) ON DELETE CASCADE
);*/
/*
DROP TABLE ACCOUNT;
CREATE TABLE ACCOUNT
(
    ACCOUNTID INT NOT NULL,
    BALANCE INT NOT NULL,
    ACCCOUNT_STATUS VARCHAR(20) NOT NULL,
    ACCOUNT_TYPE VARCHAR(20) NOT NULL,
    PRIMARY_ACCOUNT_HOLDER INT NOT NULL,
    SECONDARY_ACCOUNT_HOLDER INT,
    CONSTRAINT PK_ACCOUNT_ID PRIMARY KEY (ACCOUNTID)
);*/
/*
select * from CUSTOMER;
INSERT INTO CUSTOMER VALUES(1,'TEST','TEST');
INSERT INTO ACCOUNT VALUES (1, 100, 'Account.PENDING', 'Account.CHECKING', 1, NULL);
INSERT INTO CUSTOMER_ACCOUNTS VALUES (1, 1);
*/
/*
UPDATE "USER" SET "username"='update', "password"='update' WHERE "customerid" = '2';

create sequence CUSTOMER_ID_SEQ start 1;
create sequence ACCOUNT_ID_SEQ start 1;

CREATE OR REPLACE FUNCTION insert_into_customer()
RETURNS trigger AS $$
  BEGIN
  IF(TG_OP = 'INSERT') THEN
    NEW.customerid = (select nextval('CUSTOMER_ID_SEQ'));
  END IF;
  RETURN NEW;
  END;
$$ LANGUAGE plpgsql;
/

CREATE TRIGGER customer_insert
  BEFORE INSERT ON CUSTOMER
  FOR EACH ROW
  EXECUTE PROCEDURE insert_into_customer();
  /
CREATE OR REPLACE FUNCTION insert_into_account()
RETURNS trigger AS $$
  BEGIN
  IF(TG_OP = 'INSERT') THEN
    NEW.accountid = (select nextval('ACCOUNT_ID_SEQ'));
  END IF;
  RETURN NEW;
  END;
$$ LANGUAGE plpgsql;
/

CREATE TRIGGER account_insert
  BEFORE INSERT ON ACCOUNT
  FOR EACH ROW
  EXECUTE PROCEDURE insert_into_account();
  /
*/